// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat.proto

#ifndef PROTOBUF_chat_2eproto__INCLUDED
#define PROTOBUF_chat_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_chat_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[18];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsLoginRequestImpl();
void InitDefaultsLoginRequest();
void InitDefaultsLoginResponseImpl();
void InitDefaultsLoginResponse();
void InitDefaultsRegisterRequestImpl();
void InitDefaultsRegisterRequest();
void InitDefaultsRegisterResponseImpl();
void InitDefaultsRegisterResponse();
void InitDefaultsListUserRequestImpl();
void InitDefaultsListUserRequest();
void InitDefaultsListUserResponse_UserImpl();
void InitDefaultsListUserResponse_User();
void InitDefaultsListUserResponseImpl();
void InitDefaultsListUserResponse();
void InitDefaultsListBuddyRequestImpl();
void InitDefaultsListBuddyRequest();
void InitDefaultsListBuddyResponse_UserImpl();
void InitDefaultsListBuddyResponse_User();
void InitDefaultsListBuddyResponseImpl();
void InitDefaultsListBuddyResponse();
void InitDefaultsAddBuddyRequestImpl();
void InitDefaultsAddBuddyRequest();
void InitDefaultsAddBuddyResponseImpl();
void InitDefaultsAddBuddyResponse();
void InitDefaultsRemoveBuddyRequestImpl();
void InitDefaultsRemoveBuddyRequest();
void InitDefaultsRemoveBuddyResponseImpl();
void InitDefaultsRemoveBuddyResponse();
void InitDefaultsMessageImpl();
void InitDefaultsMessage();
void InitDefaultsResetImpl();
void InitDefaultsReset();
void InitDefaultsUserDatabase_UserImpl();
void InitDefaultsUserDatabase_User();
void InitDefaultsUserDatabaseImpl();
void InitDefaultsUserDatabase();
inline void InitDefaults() {
  InitDefaultsLoginRequest();
  InitDefaultsLoginResponse();
  InitDefaultsRegisterRequest();
  InitDefaultsRegisterResponse();
  InitDefaultsListUserRequest();
  InitDefaultsListUserResponse_User();
  InitDefaultsListUserResponse();
  InitDefaultsListBuddyRequest();
  InitDefaultsListBuddyResponse_User();
  InitDefaultsListBuddyResponse();
  InitDefaultsAddBuddyRequest();
  InitDefaultsAddBuddyResponse();
  InitDefaultsRemoveBuddyRequest();
  InitDefaultsRemoveBuddyResponse();
  InitDefaultsMessage();
  InitDefaultsReset();
  InitDefaultsUserDatabase_User();
  InitDefaultsUserDatabase();
}
}  // namespace protobuf_chat_2eproto
class AddBuddyRequest;
class AddBuddyRequestDefaultTypeInternal;
extern AddBuddyRequestDefaultTypeInternal _AddBuddyRequest_default_instance_;
class AddBuddyResponse;
class AddBuddyResponseDefaultTypeInternal;
extern AddBuddyResponseDefaultTypeInternal _AddBuddyResponse_default_instance_;
class ListBuddyRequest;
class ListBuddyRequestDefaultTypeInternal;
extern ListBuddyRequestDefaultTypeInternal _ListBuddyRequest_default_instance_;
class ListBuddyResponse;
class ListBuddyResponseDefaultTypeInternal;
extern ListBuddyResponseDefaultTypeInternal _ListBuddyResponse_default_instance_;
class ListBuddyResponse_User;
class ListBuddyResponse_UserDefaultTypeInternal;
extern ListBuddyResponse_UserDefaultTypeInternal _ListBuddyResponse_User_default_instance_;
class ListUserRequest;
class ListUserRequestDefaultTypeInternal;
extern ListUserRequestDefaultTypeInternal _ListUserRequest_default_instance_;
class ListUserResponse;
class ListUserResponseDefaultTypeInternal;
extern ListUserResponseDefaultTypeInternal _ListUserResponse_default_instance_;
class ListUserResponse_User;
class ListUserResponse_UserDefaultTypeInternal;
extern ListUserResponse_UserDefaultTypeInternal _ListUserResponse_User_default_instance_;
class LoginRequest;
class LoginRequestDefaultTypeInternal;
extern LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
class LoginResponse;
class LoginResponseDefaultTypeInternal;
extern LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class RegisterRequest;
class RegisterRequestDefaultTypeInternal;
extern RegisterRequestDefaultTypeInternal _RegisterRequest_default_instance_;
class RegisterResponse;
class RegisterResponseDefaultTypeInternal;
extern RegisterResponseDefaultTypeInternal _RegisterResponse_default_instance_;
class RemoveBuddyRequest;
class RemoveBuddyRequestDefaultTypeInternal;
extern RemoveBuddyRequestDefaultTypeInternal _RemoveBuddyRequest_default_instance_;
class RemoveBuddyResponse;
class RemoveBuddyResponseDefaultTypeInternal;
extern RemoveBuddyResponseDefaultTypeInternal _RemoveBuddyResponse_default_instance_;
class Reset;
class ResetDefaultTypeInternal;
extern ResetDefaultTypeInternal _Reset_default_instance_;
class UserDatabase;
class UserDatabaseDefaultTypeInternal;
extern UserDatabaseDefaultTypeInternal _UserDatabase_default_instance_;
class UserDatabase_User;
class UserDatabase_UserDefaultTypeInternal;
extern UserDatabase_UserDefaultTypeInternal _UserDatabase_User_default_instance_;

enum LoginResponse_Code {
  LoginResponse_Code_SUCCESS = 0,
  LoginResponse_Code_USER_NOT_FOUND = 1,
  LoginResponse_Code_PASSWORD_ERROR = 2,
  LoginResponse_Code_LoginResponse_Code_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LoginResponse_Code_LoginResponse_Code_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LoginResponse_Code_IsValid(int value);
const LoginResponse_Code LoginResponse_Code_Code_MIN = LoginResponse_Code_SUCCESS;
const LoginResponse_Code LoginResponse_Code_Code_MAX = LoginResponse_Code_PASSWORD_ERROR;
const int LoginResponse_Code_Code_ARRAYSIZE = LoginResponse_Code_Code_MAX + 1;

const ::google::protobuf::EnumDescriptor* LoginResponse_Code_descriptor();
inline const ::std::string& LoginResponse_Code_Name(LoginResponse_Code value) {
  return ::google::protobuf::internal::NameOfEnum(
    LoginResponse_Code_descriptor(), value);
}
inline bool LoginResponse_Code_Parse(
    const ::std::string& name, LoginResponse_Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LoginResponse_Code>(
    LoginResponse_Code_descriptor(), name, value);
}
enum RegisterResponse_Code {
  RegisterResponse_Code_SUCCESS = 0,
  RegisterResponse_Code_USER_EXISTS = 1,
  RegisterResponse_Code_RegisterResponse_Code_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RegisterResponse_Code_RegisterResponse_Code_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RegisterResponse_Code_IsValid(int value);
const RegisterResponse_Code RegisterResponse_Code_Code_MIN = RegisterResponse_Code_SUCCESS;
const RegisterResponse_Code RegisterResponse_Code_Code_MAX = RegisterResponse_Code_USER_EXISTS;
const int RegisterResponse_Code_Code_ARRAYSIZE = RegisterResponse_Code_Code_MAX + 1;

const ::google::protobuf::EnumDescriptor* RegisterResponse_Code_descriptor();
inline const ::std::string& RegisterResponse_Code_Name(RegisterResponse_Code value) {
  return ::google::protobuf::internal::NameOfEnum(
    RegisterResponse_Code_descriptor(), value);
}
inline bool RegisterResponse_Code_Parse(
    const ::std::string& name, RegisterResponse_Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RegisterResponse_Code>(
    RegisterResponse_Code_descriptor(), name, value);
}
enum AddBuddyResponse_Code {
  AddBuddyResponse_Code_SUCCESS = 0,
  AddBuddyResponse_Code_FAILED = 1,
  AddBuddyResponse_Code_AddBuddyResponse_Code_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AddBuddyResponse_Code_AddBuddyResponse_Code_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AddBuddyResponse_Code_IsValid(int value);
const AddBuddyResponse_Code AddBuddyResponse_Code_Code_MIN = AddBuddyResponse_Code_SUCCESS;
const AddBuddyResponse_Code AddBuddyResponse_Code_Code_MAX = AddBuddyResponse_Code_FAILED;
const int AddBuddyResponse_Code_Code_ARRAYSIZE = AddBuddyResponse_Code_Code_MAX + 1;

const ::google::protobuf::EnumDescriptor* AddBuddyResponse_Code_descriptor();
inline const ::std::string& AddBuddyResponse_Code_Name(AddBuddyResponse_Code value) {
  return ::google::protobuf::internal::NameOfEnum(
    AddBuddyResponse_Code_descriptor(), value);
}
inline bool AddBuddyResponse_Code_Parse(
    const ::std::string& name, AddBuddyResponse_Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AddBuddyResponse_Code>(
    AddBuddyResponse_Code_descriptor(), name, value);
}
enum RemoveBuddyResponse_Code {
  RemoveBuddyResponse_Code_SUCCESS = 0,
  RemoveBuddyResponse_Code_FAILED = 1,
  RemoveBuddyResponse_Code_RemoveBuddyResponse_Code_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RemoveBuddyResponse_Code_RemoveBuddyResponse_Code_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RemoveBuddyResponse_Code_IsValid(int value);
const RemoveBuddyResponse_Code RemoveBuddyResponse_Code_Code_MIN = RemoveBuddyResponse_Code_SUCCESS;
const RemoveBuddyResponse_Code RemoveBuddyResponse_Code_Code_MAX = RemoveBuddyResponse_Code_FAILED;
const int RemoveBuddyResponse_Code_Code_ARRAYSIZE = RemoveBuddyResponse_Code_Code_MAX + 1;

const ::google::protobuf::EnumDescriptor* RemoveBuddyResponse_Code_descriptor();
inline const ::std::string& RemoveBuddyResponse_Code_Name(RemoveBuddyResponse_Code value) {
  return ::google::protobuf::internal::NameOfEnum(
    RemoveBuddyResponse_Code_descriptor(), value);
}
inline bool RemoveBuddyResponse_Code_Parse(
    const ::std::string& name, RemoveBuddyResponse_Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RemoveBuddyResponse_Code>(
    RemoveBuddyResponse_Code_descriptor(), name, value);
}
enum Reset_Code {
  Reset_Code_UNKNOWN_ERROR = 0,
  Reset_Code_PROTOCOL_MISMATCH = 1,
  Reset_Code_Reset_Code_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Reset_Code_Reset_Code_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Reset_Code_IsValid(int value);
const Reset_Code Reset_Code_Code_MIN = Reset_Code_UNKNOWN_ERROR;
const Reset_Code Reset_Code_Code_MAX = Reset_Code_PROTOCOL_MISMATCH;
const int Reset_Code_Code_ARRAYSIZE = Reset_Code_Code_MAX + 1;

const ::google::protobuf::EnumDescriptor* Reset_Code_descriptor();
inline const ::std::string& Reset_Code_Name(Reset_Code value) {
  return ::google::protobuf::internal::NameOfEnum(
    Reset_Code_descriptor(), value);
}
inline bool Reset_Code_Parse(
    const ::std::string& name, Reset_Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Reset_Code>(
    Reset_Code_descriptor(), name, value);
}
// ===================================================================

class LoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginRequest) */ {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginRequest(LoginRequest&& from) noexcept
    : LoginRequest() {
    *this = ::std::move(from);
  }

  inline LoginRequest& operator=(LoginRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginRequest* internal_default_instance() {
    return reinterpret_cast<const LoginRequest*>(
               &_LoginRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LoginRequest* other);
  friend void swap(LoginRequest& a, LoginRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:LoginRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend struct ::protobuf_chat_2eproto::TableStruct;
  friend void ::protobuf_chat_2eproto::InitDefaultsLoginRequestImpl();
};
// -------------------------------------------------------------------

class LoginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginResponse) */ {
 public:
  LoginResponse();
  virtual ~LoginResponse();

  LoginResponse(const LoginResponse& from);

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginResponse(LoginResponse&& from) noexcept
    : LoginResponse() {
    *this = ::std::move(from);
  }

  inline LoginResponse& operator=(LoginResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginResponse* internal_default_instance() {
    return reinterpret_cast<const LoginResponse*>(
               &_LoginResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(LoginResponse* other);
  friend void swap(LoginResponse& a, LoginResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginResponse& from);
  void MergeFrom(const LoginResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LoginResponse_Code Code;
  static const Code SUCCESS =
    LoginResponse_Code_SUCCESS;
  static const Code USER_NOT_FOUND =
    LoginResponse_Code_USER_NOT_FOUND;
  static const Code PASSWORD_ERROR =
    LoginResponse_Code_PASSWORD_ERROR;
  static inline bool Code_IsValid(int value) {
    return LoginResponse_Code_IsValid(value);
  }
  static const Code Code_MIN =
    LoginResponse_Code_Code_MIN;
  static const Code Code_MAX =
    LoginResponse_Code_Code_MAX;
  static const int Code_ARRAYSIZE =
    LoginResponse_Code_Code_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Code_descriptor() {
    return LoginResponse_Code_descriptor();
  }
  static inline const ::std::string& Code_Name(Code value) {
    return LoginResponse_Code_Name(value);
  }
  static inline bool Code_Parse(const ::std::string& name,
      Code* value) {
    return LoginResponse_Code_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .LoginResponse.Code code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::LoginResponse_Code code() const;
  void set_code(::LoginResponse_Code value);

  // uint32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:LoginResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int code_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct ::protobuf_chat_2eproto::TableStruct;
  friend void ::protobuf_chat_2eproto::InitDefaultsLoginResponseImpl();
};
// -------------------------------------------------------------------

class RegisterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RegisterRequest) */ {
 public:
  RegisterRequest();
  virtual ~RegisterRequest();

  RegisterRequest(const RegisterRequest& from);

  inline RegisterRequest& operator=(const RegisterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterRequest(RegisterRequest&& from) noexcept
    : RegisterRequest() {
    *this = ::std::move(from);
  }

  inline RegisterRequest& operator=(RegisterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterRequest* internal_default_instance() {
    return reinterpret_cast<const RegisterRequest*>(
               &_RegisterRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(RegisterRequest* other);
  friend void swap(RegisterRequest& a, RegisterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RegisterRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterRequest& from);
  void MergeFrom(const RegisterRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:RegisterRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend struct ::protobuf_chat_2eproto::TableStruct;
  friend void ::protobuf_chat_2eproto::InitDefaultsRegisterRequestImpl();
};
// -------------------------------------------------------------------

class RegisterResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RegisterResponse) */ {
 public:
  RegisterResponse();
  virtual ~RegisterResponse();

  RegisterResponse(const RegisterResponse& from);

  inline RegisterResponse& operator=(const RegisterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterResponse(RegisterResponse&& from) noexcept
    : RegisterResponse() {
    *this = ::std::move(from);
  }

  inline RegisterResponse& operator=(RegisterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterResponse* internal_default_instance() {
    return reinterpret_cast<const RegisterResponse*>(
               &_RegisterResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(RegisterResponse* other);
  friend void swap(RegisterResponse& a, RegisterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RegisterResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterResponse& from);
  void MergeFrom(const RegisterResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RegisterResponse_Code Code;
  static const Code SUCCESS =
    RegisterResponse_Code_SUCCESS;
  static const Code USER_EXISTS =
    RegisterResponse_Code_USER_EXISTS;
  static inline bool Code_IsValid(int value) {
    return RegisterResponse_Code_IsValid(value);
  }
  static const Code Code_MIN =
    RegisterResponse_Code_Code_MIN;
  static const Code Code_MAX =
    RegisterResponse_Code_Code_MAX;
  static const int Code_ARRAYSIZE =
    RegisterResponse_Code_Code_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Code_descriptor() {
    return RegisterResponse_Code_descriptor();
  }
  static inline const ::std::string& Code_Name(Code value) {
    return RegisterResponse_Code_Name(value);
  }
  static inline bool Code_Parse(const ::std::string& name,
      Code* value) {
    return RegisterResponse_Code_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .RegisterResponse.Code code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::RegisterResponse_Code code() const;
  void set_code(::RegisterResponse_Code value);

  // uint32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RegisterResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int code_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct ::protobuf_chat_2eproto::TableStruct;
  friend void ::protobuf_chat_2eproto::InitDefaultsRegisterResponseImpl();
};
// -------------------------------------------------------------------

class ListUserRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ListUserRequest) */ {
 public:
  ListUserRequest();
  virtual ~ListUserRequest();

  ListUserRequest(const ListUserRequest& from);

  inline ListUserRequest& operator=(const ListUserRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUserRequest(ListUserRequest&& from) noexcept
    : ListUserRequest() {
    *this = ::std::move(from);
  }

  inline ListUserRequest& operator=(ListUserRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUserRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUserRequest* internal_default_instance() {
    return reinterpret_cast<const ListUserRequest*>(
               &_ListUserRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ListUserRequest* other);
  friend void swap(ListUserRequest& a, ListUserRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUserRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListUserRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListUserRequest& from);
  void MergeFrom(const ListUserRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListUserRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ListUserRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_chat_2eproto::TableStruct;
  friend void ::protobuf_chat_2eproto::InitDefaultsListUserRequestImpl();
};
// -------------------------------------------------------------------

class ListUserResponse_User : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ListUserResponse.User) */ {
 public:
  ListUserResponse_User();
  virtual ~ListUserResponse_User();

  ListUserResponse_User(const ListUserResponse_User& from);

  inline ListUserResponse_User& operator=(const ListUserResponse_User& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUserResponse_User(ListUserResponse_User&& from) noexcept
    : ListUserResponse_User() {
    *this = ::std::move(from);
  }

  inline ListUserResponse_User& operator=(ListUserResponse_User&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUserResponse_User& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUserResponse_User* internal_default_instance() {
    return reinterpret_cast<const ListUserResponse_User*>(
               &_ListUserResponse_User_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ListUserResponse_User* other);
  friend void swap(ListUserResponse_User& a, ListUserResponse_User& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUserResponse_User* New() const PROTOBUF_FINAL { return New(NULL); }

  ListUserResponse_User* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListUserResponse_User& from);
  void MergeFrom(const ListUserResponse_User& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListUserResponse_User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 2;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ListUserResponse.User)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct ::protobuf_chat_2eproto::TableStruct;
  friend void ::protobuf_chat_2eproto::InitDefaultsListUserResponse_UserImpl();
};
// -------------------------------------------------------------------

class ListUserResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ListUserResponse) */ {
 public:
  ListUserResponse();
  virtual ~ListUserResponse();

  ListUserResponse(const ListUserResponse& from);

  inline ListUserResponse& operator=(const ListUserResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListUserResponse(ListUserResponse&& from) noexcept
    : ListUserResponse() {
    *this = ::std::move(from);
  }

  inline ListUserResponse& operator=(ListUserResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListUserResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListUserResponse* internal_default_instance() {
    return reinterpret_cast<const ListUserResponse*>(
               &_ListUserResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ListUserResponse* other);
  friend void swap(ListUserResponse& a, ListUserResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListUserResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListUserResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListUserResponse& from);
  void MergeFrom(const ListUserResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListUserResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ListUserResponse_User User;

  // accessors -------------------------------------------------------

  // repeated .ListUserResponse.User users = 1;
  int users_size() const;
  void clear_users();
  static const int kUsersFieldNumber = 1;
  const ::ListUserResponse_User& users(int index) const;
  ::ListUserResponse_User* mutable_users(int index);
  ::ListUserResponse_User* add_users();
  ::google::protobuf::RepeatedPtrField< ::ListUserResponse_User >*
      mutable_users();
  const ::google::protobuf::RepeatedPtrField< ::ListUserResponse_User >&
      users() const;

  // @@protoc_insertion_point(class_scope:ListUserResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ListUserResponse_User > users_;
  mutable int _cached_size_;
  friend struct ::protobuf_chat_2eproto::TableStruct;
  friend void ::protobuf_chat_2eproto::InitDefaultsListUserResponseImpl();
};
// -------------------------------------------------------------------

class ListBuddyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ListBuddyRequest) */ {
 public:
  ListBuddyRequest();
  virtual ~ListBuddyRequest();

  ListBuddyRequest(const ListBuddyRequest& from);

  inline ListBuddyRequest& operator=(const ListBuddyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBuddyRequest(ListBuddyRequest&& from) noexcept
    : ListBuddyRequest() {
    *this = ::std::move(from);
  }

  inline ListBuddyRequest& operator=(ListBuddyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBuddyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBuddyRequest* internal_default_instance() {
    return reinterpret_cast<const ListBuddyRequest*>(
               &_ListBuddyRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ListBuddyRequest* other);
  friend void swap(ListBuddyRequest& a, ListBuddyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBuddyRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListBuddyRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListBuddyRequest& from);
  void MergeFrom(const ListBuddyRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListBuddyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ListBuddyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_chat_2eproto::TableStruct;
  friend void ::protobuf_chat_2eproto::InitDefaultsListBuddyRequestImpl();
};
// -------------------------------------------------------------------

class ListBuddyResponse_User : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ListBuddyResponse.User) */ {
 public:
  ListBuddyResponse_User();
  virtual ~ListBuddyResponse_User();

  ListBuddyResponse_User(const ListBuddyResponse_User& from);

  inline ListBuddyResponse_User& operator=(const ListBuddyResponse_User& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBuddyResponse_User(ListBuddyResponse_User&& from) noexcept
    : ListBuddyResponse_User() {
    *this = ::std::move(from);
  }

  inline ListBuddyResponse_User& operator=(ListBuddyResponse_User&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBuddyResponse_User& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBuddyResponse_User* internal_default_instance() {
    return reinterpret_cast<const ListBuddyResponse_User*>(
               &_ListBuddyResponse_User_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ListBuddyResponse_User* other);
  friend void swap(ListBuddyResponse_User& a, ListBuddyResponse_User& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBuddyResponse_User* New() const PROTOBUF_FINAL { return New(NULL); }

  ListBuddyResponse_User* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListBuddyResponse_User& from);
  void MergeFrom(const ListBuddyResponse_User& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListBuddyResponse_User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 2;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ListBuddyResponse.User)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct ::protobuf_chat_2eproto::TableStruct;
  friend void ::protobuf_chat_2eproto::InitDefaultsListBuddyResponse_UserImpl();
};
// -------------------------------------------------------------------

class ListBuddyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ListBuddyResponse) */ {
 public:
  ListBuddyResponse();
  virtual ~ListBuddyResponse();

  ListBuddyResponse(const ListBuddyResponse& from);

  inline ListBuddyResponse& operator=(const ListBuddyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBuddyResponse(ListBuddyResponse&& from) noexcept
    : ListBuddyResponse() {
    *this = ::std::move(from);
  }

  inline ListBuddyResponse& operator=(ListBuddyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBuddyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBuddyResponse* internal_default_instance() {
    return reinterpret_cast<const ListBuddyResponse*>(
               &_ListBuddyResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ListBuddyResponse* other);
  friend void swap(ListBuddyResponse& a, ListBuddyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBuddyResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListBuddyResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListBuddyResponse& from);
  void MergeFrom(const ListBuddyResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListBuddyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ListBuddyResponse_User User;

  // accessors -------------------------------------------------------

  // repeated .ListBuddyResponse.User users = 1;
  int users_size() const;
  void clear_users();
  static const int kUsersFieldNumber = 1;
  const ::ListBuddyResponse_User& users(int index) const;
  ::ListBuddyResponse_User* mutable_users(int index);
  ::ListBuddyResponse_User* add_users();
  ::google::protobuf::RepeatedPtrField< ::ListBuddyResponse_User >*
      mutable_users();
  const ::google::protobuf::RepeatedPtrField< ::ListBuddyResponse_User >&
      users() const;

  // @@protoc_insertion_point(class_scope:ListBuddyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ListBuddyResponse_User > users_;
  mutable int _cached_size_;
  friend struct ::protobuf_chat_2eproto::TableStruct;
  friend void ::protobuf_chat_2eproto::InitDefaultsListBuddyResponseImpl();
};
// -------------------------------------------------------------------

class AddBuddyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AddBuddyRequest) */ {
 public:
  AddBuddyRequest();
  virtual ~AddBuddyRequest();

  AddBuddyRequest(const AddBuddyRequest& from);

  inline AddBuddyRequest& operator=(const AddBuddyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddBuddyRequest(AddBuddyRequest&& from) noexcept
    : AddBuddyRequest() {
    *this = ::std::move(from);
  }

  inline AddBuddyRequest& operator=(AddBuddyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddBuddyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddBuddyRequest* internal_default_instance() {
    return reinterpret_cast<const AddBuddyRequest*>(
               &_AddBuddyRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(AddBuddyRequest* other);
  friend void swap(AddBuddyRequest& a, AddBuddyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddBuddyRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AddBuddyRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddBuddyRequest& from);
  void MergeFrom(const AddBuddyRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddBuddyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:AddBuddyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct ::protobuf_chat_2eproto::TableStruct;
  friend void ::protobuf_chat_2eproto::InitDefaultsAddBuddyRequestImpl();
};
// -------------------------------------------------------------------

class AddBuddyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AddBuddyResponse) */ {
 public:
  AddBuddyResponse();
  virtual ~AddBuddyResponse();

  AddBuddyResponse(const AddBuddyResponse& from);

  inline AddBuddyResponse& operator=(const AddBuddyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddBuddyResponse(AddBuddyResponse&& from) noexcept
    : AddBuddyResponse() {
    *this = ::std::move(from);
  }

  inline AddBuddyResponse& operator=(AddBuddyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddBuddyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddBuddyResponse* internal_default_instance() {
    return reinterpret_cast<const AddBuddyResponse*>(
               &_AddBuddyResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(AddBuddyResponse* other);
  friend void swap(AddBuddyResponse& a, AddBuddyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddBuddyResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AddBuddyResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddBuddyResponse& from);
  void MergeFrom(const AddBuddyResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddBuddyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AddBuddyResponse_Code Code;
  static const Code SUCCESS =
    AddBuddyResponse_Code_SUCCESS;
  static const Code FAILED =
    AddBuddyResponse_Code_FAILED;
  static inline bool Code_IsValid(int value) {
    return AddBuddyResponse_Code_IsValid(value);
  }
  static const Code Code_MIN =
    AddBuddyResponse_Code_Code_MIN;
  static const Code Code_MAX =
    AddBuddyResponse_Code_Code_MAX;
  static const int Code_ARRAYSIZE =
    AddBuddyResponse_Code_Code_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Code_descriptor() {
    return AddBuddyResponse_Code_descriptor();
  }
  static inline const ::std::string& Code_Name(Code value) {
    return AddBuddyResponse_Code_Name(value);
  }
  static inline bool Code_Parse(const ::std::string& name,
      Code* value) {
    return AddBuddyResponse_Code_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .AddBuddyResponse.Code code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::AddBuddyResponse_Code code() const;
  void set_code(::AddBuddyResponse_Code value);

  // @@protoc_insertion_point(class_scope:AddBuddyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int code_;
  mutable int _cached_size_;
  friend struct ::protobuf_chat_2eproto::TableStruct;
  friend void ::protobuf_chat_2eproto::InitDefaultsAddBuddyResponseImpl();
};
// -------------------------------------------------------------------

class RemoveBuddyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RemoveBuddyRequest) */ {
 public:
  RemoveBuddyRequest();
  virtual ~RemoveBuddyRequest();

  RemoveBuddyRequest(const RemoveBuddyRequest& from);

  inline RemoveBuddyRequest& operator=(const RemoveBuddyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveBuddyRequest(RemoveBuddyRequest&& from) noexcept
    : RemoveBuddyRequest() {
    *this = ::std::move(from);
  }

  inline RemoveBuddyRequest& operator=(RemoveBuddyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveBuddyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveBuddyRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveBuddyRequest*>(
               &_RemoveBuddyRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(RemoveBuddyRequest* other);
  friend void swap(RemoveBuddyRequest& a, RemoveBuddyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveBuddyRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveBuddyRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveBuddyRequest& from);
  void MergeFrom(const RemoveBuddyRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveBuddyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RemoveBuddyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct ::protobuf_chat_2eproto::TableStruct;
  friend void ::protobuf_chat_2eproto::InitDefaultsRemoveBuddyRequestImpl();
};
// -------------------------------------------------------------------

class RemoveBuddyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RemoveBuddyResponse) */ {
 public:
  RemoveBuddyResponse();
  virtual ~RemoveBuddyResponse();

  RemoveBuddyResponse(const RemoveBuddyResponse& from);

  inline RemoveBuddyResponse& operator=(const RemoveBuddyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveBuddyResponse(RemoveBuddyResponse&& from) noexcept
    : RemoveBuddyResponse() {
    *this = ::std::move(from);
  }

  inline RemoveBuddyResponse& operator=(RemoveBuddyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveBuddyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveBuddyResponse* internal_default_instance() {
    return reinterpret_cast<const RemoveBuddyResponse*>(
               &_RemoveBuddyResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(RemoveBuddyResponse* other);
  friend void swap(RemoveBuddyResponse& a, RemoveBuddyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveBuddyResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveBuddyResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveBuddyResponse& from);
  void MergeFrom(const RemoveBuddyResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveBuddyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RemoveBuddyResponse_Code Code;
  static const Code SUCCESS =
    RemoveBuddyResponse_Code_SUCCESS;
  static const Code FAILED =
    RemoveBuddyResponse_Code_FAILED;
  static inline bool Code_IsValid(int value) {
    return RemoveBuddyResponse_Code_IsValid(value);
  }
  static const Code Code_MIN =
    RemoveBuddyResponse_Code_Code_MIN;
  static const Code Code_MAX =
    RemoveBuddyResponse_Code_Code_MAX;
  static const int Code_ARRAYSIZE =
    RemoveBuddyResponse_Code_Code_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Code_descriptor() {
    return RemoveBuddyResponse_Code_descriptor();
  }
  static inline const ::std::string& Code_Name(Code value) {
    return RemoveBuddyResponse_Code_Name(value);
  }
  static inline bool Code_Parse(const ::std::string& name,
      Code* value) {
    return RemoveBuddyResponse_Code_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .RemoveBuddyResponse.Code code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::RemoveBuddyResponse_Code code() const;
  void set_code(::RemoveBuddyResponse_Code value);

  // @@protoc_insertion_point(class_scope:RemoveBuddyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int code_;
  mutable int _cached_size_;
  friend struct ::protobuf_chat_2eproto::TableStruct;
  friend void ::protobuf_chat_2eproto::InitDefaultsRemoveBuddyResponseImpl();
};
// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message(Message&& from) noexcept
    : Message() {
    *this = ::std::move(from);
  }

  inline Message& operator=(Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(Message* other);
  friend void swap(Message& a, Message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message* New() const PROTOBUF_FINAL { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // bytes data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Message)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct ::protobuf_chat_2eproto::TableStruct;
  friend void ::protobuf_chat_2eproto::InitDefaultsMessageImpl();
};
// -------------------------------------------------------------------

class Reset : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Reset) */ {
 public:
  Reset();
  virtual ~Reset();

  Reset(const Reset& from);

  inline Reset& operator=(const Reset& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Reset(Reset&& from) noexcept
    : Reset() {
    *this = ::std::move(from);
  }

  inline Reset& operator=(Reset&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Reset& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Reset* internal_default_instance() {
    return reinterpret_cast<const Reset*>(
               &_Reset_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(Reset* other);
  friend void swap(Reset& a, Reset& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Reset* New() const PROTOBUF_FINAL { return New(NULL); }

  Reset* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Reset& from);
  void MergeFrom(const Reset& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Reset* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Reset_Code Code;
  static const Code UNKNOWN_ERROR =
    Reset_Code_UNKNOWN_ERROR;
  static const Code PROTOCOL_MISMATCH =
    Reset_Code_PROTOCOL_MISMATCH;
  static inline bool Code_IsValid(int value) {
    return Reset_Code_IsValid(value);
  }
  static const Code Code_MIN =
    Reset_Code_Code_MIN;
  static const Code Code_MAX =
    Reset_Code_Code_MAX;
  static const int Code_ARRAYSIZE =
    Reset_Code_Code_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Code_descriptor() {
    return Reset_Code_descriptor();
  }
  static inline const ::std::string& Code_Name(Code value) {
    return Reset_Code_Name(value);
  }
  static inline bool Code_Parse(const ::std::string& name,
      Code* value) {
    return Reset_Code_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // .Reset.Code code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::Reset_Code code() const;
  void set_code(::Reset_Code value);

  // @@protoc_insertion_point(class_scope:Reset)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  int code_;
  mutable int _cached_size_;
  friend struct ::protobuf_chat_2eproto::TableStruct;
  friend void ::protobuf_chat_2eproto::InitDefaultsResetImpl();
};
// -------------------------------------------------------------------

class UserDatabase_User : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserDatabase.User) */ {
 public:
  UserDatabase_User();
  virtual ~UserDatabase_User();

  UserDatabase_User(const UserDatabase_User& from);

  inline UserDatabase_User& operator=(const UserDatabase_User& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserDatabase_User(UserDatabase_User&& from) noexcept
    : UserDatabase_User() {
    *this = ::std::move(from);
  }

  inline UserDatabase_User& operator=(UserDatabase_User&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserDatabase_User& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserDatabase_User* internal_default_instance() {
    return reinterpret_cast<const UserDatabase_User*>(
               &_UserDatabase_User_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(UserDatabase_User* other);
  friend void swap(UserDatabase_User& a, UserDatabase_User& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserDatabase_User* New() const PROTOBUF_FINAL { return New(NULL); }

  UserDatabase_User* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserDatabase_User& from);
  void MergeFrom(const UserDatabase_User& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserDatabase_User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 buddies = 4;
  int buddies_size() const;
  void clear_buddies();
  static const int kBuddiesFieldNumber = 4;
  ::google::protobuf::uint32 buddies(int index) const;
  void set_buddies(int index, ::google::protobuf::uint32 value);
  void add_buddies(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      buddies() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_buddies();

  // string username = 2;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string password = 3;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UserDatabase.User)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > buddies_;
  mutable int _buddies_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct ::protobuf_chat_2eproto::TableStruct;
  friend void ::protobuf_chat_2eproto::InitDefaultsUserDatabase_UserImpl();
};
// -------------------------------------------------------------------

class UserDatabase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserDatabase) */ {
 public:
  UserDatabase();
  virtual ~UserDatabase();

  UserDatabase(const UserDatabase& from);

  inline UserDatabase& operator=(const UserDatabase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserDatabase(UserDatabase&& from) noexcept
    : UserDatabase() {
    *this = ::std::move(from);
  }

  inline UserDatabase& operator=(UserDatabase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserDatabase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserDatabase* internal_default_instance() {
    return reinterpret_cast<const UserDatabase*>(
               &_UserDatabase_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(UserDatabase* other);
  friend void swap(UserDatabase& a, UserDatabase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserDatabase* New() const PROTOBUF_FINAL { return New(NULL); }

  UserDatabase* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserDatabase& from);
  void MergeFrom(const UserDatabase& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserDatabase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UserDatabase_User User;

  // accessors -------------------------------------------------------

  // repeated .UserDatabase.User users = 2;
  int users_size() const;
  void clear_users();
  static const int kUsersFieldNumber = 2;
  const ::UserDatabase_User& users(int index) const;
  ::UserDatabase_User* mutable_users(int index);
  ::UserDatabase_User* add_users();
  ::google::protobuf::RepeatedPtrField< ::UserDatabase_User >*
      mutable_users();
  const ::google::protobuf::RepeatedPtrField< ::UserDatabase_User >&
      users() const;

  // uint32 maxUid = 1;
  void clear_maxuid();
  static const int kMaxUidFieldNumber = 1;
  ::google::protobuf::uint32 maxuid() const;
  void set_maxuid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UserDatabase)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::UserDatabase_User > users_;
  ::google::protobuf::uint32 maxuid_;
  mutable int _cached_size_;
  friend struct ::protobuf_chat_2eproto::TableStruct;
  friend void ::protobuf_chat_2eproto::InitDefaultsUserDatabaseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LoginRequest

// string username = 1;
inline void LoginRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::username() const {
  // @@protoc_insertion_point(field_get:LoginRequest.username)
  return username_.GetNoArena();
}
inline void LoginRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginRequest.username)
}
#if LANG_CXX11
inline void LoginRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginRequest.username)
}
#endif
inline void LoginRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginRequest.username)
}
inline void LoginRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginRequest.username)
}
inline ::std::string* LoginRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:LoginRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_username() {
  // @@protoc_insertion_point(field_release:LoginRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:LoginRequest.username)
}

// string password = 2;
inline void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:LoginRequest.password)
  return password_.GetNoArena();
}
inline void LoginRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginRequest.password)
}
#if LANG_CXX11
inline void LoginRequest::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginRequest.password)
}
#endif
inline void LoginRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginRequest.password)
}
inline void LoginRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginRequest.password)
}
inline ::std::string* LoginRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:LoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:LoginRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:LoginRequest.password)
}

// -------------------------------------------------------------------

// LoginResponse

// .LoginResponse.Code code = 1;
inline void LoginResponse::clear_code() {
  code_ = 0;
}
inline ::LoginResponse_Code LoginResponse::code() const {
  // @@protoc_insertion_point(field_get:LoginResponse.code)
  return static_cast< ::LoginResponse_Code >(code_);
}
inline void LoginResponse::set_code(::LoginResponse_Code value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:LoginResponse.code)
}

// uint32 uid = 2;
inline void LoginResponse::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 LoginResponse::uid() const {
  // @@protoc_insertion_point(field_get:LoginResponse.uid)
  return uid_;
}
inline void LoginResponse::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:LoginResponse.uid)
}

// -------------------------------------------------------------------

// RegisterRequest

// string username = 1;
inline void RegisterRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterRequest::username() const {
  // @@protoc_insertion_point(field_get:RegisterRequest.username)
  return username_.GetNoArena();
}
inline void RegisterRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RegisterRequest.username)
}
#if LANG_CXX11
inline void RegisterRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RegisterRequest.username)
}
#endif
inline void RegisterRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RegisterRequest.username)
}
inline void RegisterRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RegisterRequest.username)
}
inline ::std::string* RegisterRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:RegisterRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterRequest::release_username() {
  // @@protoc_insertion_point(field_release:RegisterRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:RegisterRequest.username)
}

// string password = 2;
inline void RegisterRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterRequest::password() const {
  // @@protoc_insertion_point(field_get:RegisterRequest.password)
  return password_.GetNoArena();
}
inline void RegisterRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RegisterRequest.password)
}
#if LANG_CXX11
inline void RegisterRequest::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RegisterRequest.password)
}
#endif
inline void RegisterRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RegisterRequest.password)
}
inline void RegisterRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RegisterRequest.password)
}
inline ::std::string* RegisterRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:RegisterRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterRequest::release_password() {
  // @@protoc_insertion_point(field_release:RegisterRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:RegisterRequest.password)
}

// -------------------------------------------------------------------

// RegisterResponse

// .RegisterResponse.Code code = 1;
inline void RegisterResponse::clear_code() {
  code_ = 0;
}
inline ::RegisterResponse_Code RegisterResponse::code() const {
  // @@protoc_insertion_point(field_get:RegisterResponse.code)
  return static_cast< ::RegisterResponse_Code >(code_);
}
inline void RegisterResponse::set_code(::RegisterResponse_Code value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:RegisterResponse.code)
}

// uint32 uid = 2;
inline void RegisterResponse::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 RegisterResponse::uid() const {
  // @@protoc_insertion_point(field_get:RegisterResponse.uid)
  return uid_;
}
inline void RegisterResponse::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:RegisterResponse.uid)
}

// -------------------------------------------------------------------

// ListUserRequest

// -------------------------------------------------------------------

// ListUserResponse_User

// uint32 uid = 1;
inline void ListUserResponse_User::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 ListUserResponse_User::uid() const {
  // @@protoc_insertion_point(field_get:ListUserResponse.User.uid)
  return uid_;
}
inline void ListUserResponse_User::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:ListUserResponse.User.uid)
}

// string username = 2;
inline void ListUserResponse_User::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListUserResponse_User::username() const {
  // @@protoc_insertion_point(field_get:ListUserResponse.User.username)
  return username_.GetNoArena();
}
inline void ListUserResponse_User::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ListUserResponse.User.username)
}
#if LANG_CXX11
inline void ListUserResponse_User::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ListUserResponse.User.username)
}
#endif
inline void ListUserResponse_User::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ListUserResponse.User.username)
}
inline void ListUserResponse_User::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ListUserResponse.User.username)
}
inline ::std::string* ListUserResponse_User::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:ListUserResponse.User.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListUserResponse_User::release_username() {
  // @@protoc_insertion_point(field_release:ListUserResponse.User.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListUserResponse_User::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:ListUserResponse.User.username)
}

// -------------------------------------------------------------------

// ListUserResponse

// repeated .ListUserResponse.User users = 1;
inline int ListUserResponse::users_size() const {
  return users_.size();
}
inline void ListUserResponse::clear_users() {
  users_.Clear();
}
inline const ::ListUserResponse_User& ListUserResponse::users(int index) const {
  // @@protoc_insertion_point(field_get:ListUserResponse.users)
  return users_.Get(index);
}
inline ::ListUserResponse_User* ListUserResponse::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:ListUserResponse.users)
  return users_.Mutable(index);
}
inline ::ListUserResponse_User* ListUserResponse::add_users() {
  // @@protoc_insertion_point(field_add:ListUserResponse.users)
  return users_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ListUserResponse_User >*
ListUserResponse::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:ListUserResponse.users)
  return &users_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ListUserResponse_User >&
ListUserResponse::users() const {
  // @@protoc_insertion_point(field_list:ListUserResponse.users)
  return users_;
}

// -------------------------------------------------------------------

// ListBuddyRequest

// -------------------------------------------------------------------

// ListBuddyResponse_User

// uint32 uid = 1;
inline void ListBuddyResponse_User::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 ListBuddyResponse_User::uid() const {
  // @@protoc_insertion_point(field_get:ListBuddyResponse.User.uid)
  return uid_;
}
inline void ListBuddyResponse_User::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:ListBuddyResponse.User.uid)
}

// string username = 2;
inline void ListBuddyResponse_User::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListBuddyResponse_User::username() const {
  // @@protoc_insertion_point(field_get:ListBuddyResponse.User.username)
  return username_.GetNoArena();
}
inline void ListBuddyResponse_User::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ListBuddyResponse.User.username)
}
#if LANG_CXX11
inline void ListBuddyResponse_User::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ListBuddyResponse.User.username)
}
#endif
inline void ListBuddyResponse_User::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ListBuddyResponse.User.username)
}
inline void ListBuddyResponse_User::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ListBuddyResponse.User.username)
}
inline ::std::string* ListBuddyResponse_User::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:ListBuddyResponse.User.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListBuddyResponse_User::release_username() {
  // @@protoc_insertion_point(field_release:ListBuddyResponse.User.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListBuddyResponse_User::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:ListBuddyResponse.User.username)
}

// -------------------------------------------------------------------

// ListBuddyResponse

// repeated .ListBuddyResponse.User users = 1;
inline int ListBuddyResponse::users_size() const {
  return users_.size();
}
inline void ListBuddyResponse::clear_users() {
  users_.Clear();
}
inline const ::ListBuddyResponse_User& ListBuddyResponse::users(int index) const {
  // @@protoc_insertion_point(field_get:ListBuddyResponse.users)
  return users_.Get(index);
}
inline ::ListBuddyResponse_User* ListBuddyResponse::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:ListBuddyResponse.users)
  return users_.Mutable(index);
}
inline ::ListBuddyResponse_User* ListBuddyResponse::add_users() {
  // @@protoc_insertion_point(field_add:ListBuddyResponse.users)
  return users_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ListBuddyResponse_User >*
ListBuddyResponse::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:ListBuddyResponse.users)
  return &users_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ListBuddyResponse_User >&
ListBuddyResponse::users() const {
  // @@protoc_insertion_point(field_list:ListBuddyResponse.users)
  return users_;
}

// -------------------------------------------------------------------

// AddBuddyRequest

// uint32 uid = 1;
inline void AddBuddyRequest::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 AddBuddyRequest::uid() const {
  // @@protoc_insertion_point(field_get:AddBuddyRequest.uid)
  return uid_;
}
inline void AddBuddyRequest::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:AddBuddyRequest.uid)
}

// -------------------------------------------------------------------

// AddBuddyResponse

// .AddBuddyResponse.Code code = 1;
inline void AddBuddyResponse::clear_code() {
  code_ = 0;
}
inline ::AddBuddyResponse_Code AddBuddyResponse::code() const {
  // @@protoc_insertion_point(field_get:AddBuddyResponse.code)
  return static_cast< ::AddBuddyResponse_Code >(code_);
}
inline void AddBuddyResponse::set_code(::AddBuddyResponse_Code value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:AddBuddyResponse.code)
}

// -------------------------------------------------------------------

// RemoveBuddyRequest

// uint32 uid = 1;
inline void RemoveBuddyRequest::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 RemoveBuddyRequest::uid() const {
  // @@protoc_insertion_point(field_get:RemoveBuddyRequest.uid)
  return uid_;
}
inline void RemoveBuddyRequest::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:RemoveBuddyRequest.uid)
}

// -------------------------------------------------------------------

// RemoveBuddyResponse

// .RemoveBuddyResponse.Code code = 1;
inline void RemoveBuddyResponse::clear_code() {
  code_ = 0;
}
inline ::RemoveBuddyResponse_Code RemoveBuddyResponse::code() const {
  // @@protoc_insertion_point(field_get:RemoveBuddyResponse.code)
  return static_cast< ::RemoveBuddyResponse_Code >(code_);
}
inline void RemoveBuddyResponse::set_code(::RemoveBuddyResponse_Code value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:RemoveBuddyResponse.code)
}

// -------------------------------------------------------------------

// Message

// uint32 uid = 1;
inline void Message::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 Message::uid() const {
  // @@protoc_insertion_point(field_get:Message.uid)
  return uid_;
}
inline void Message::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:Message.uid)
}

// string msg = 2;
inline void Message::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message::msg() const {
  // @@protoc_insertion_point(field_get:Message.msg)
  return msg_.GetNoArena();
}
inline void Message::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.msg)
}
#if LANG_CXX11
inline void Message::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message.msg)
}
#endif
inline void Message::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.msg)
}
inline void Message::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.msg)
}
inline ::std::string* Message::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:Message.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_msg() {
  // @@protoc_insertion_point(field_release:Message.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:Message.msg)
}

// bytes data = 3;
inline void Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message::data() const {
  // @@protoc_insertion_point(field_get:Message.data)
  return data_.GetNoArena();
}
inline void Message::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.data)
}
#if LANG_CXX11
inline void Message::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message.data)
}
#endif
inline void Message::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.data)
}
inline void Message::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.data)
}
inline ::std::string* Message::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_data() {
  // @@protoc_insertion_point(field_release:Message.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:Message.data)
}

// -------------------------------------------------------------------

// Reset

// .Reset.Code code = 1;
inline void Reset::clear_code() {
  code_ = 0;
}
inline ::Reset_Code Reset::code() const {
  // @@protoc_insertion_point(field_get:Reset.code)
  return static_cast< ::Reset_Code >(code_);
}
inline void Reset::set_code(::Reset_Code value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:Reset.code)
}

// string msg = 2;
inline void Reset::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Reset::msg() const {
  // @@protoc_insertion_point(field_get:Reset.msg)
  return msg_.GetNoArena();
}
inline void Reset::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Reset.msg)
}
#if LANG_CXX11
inline void Reset::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Reset.msg)
}
#endif
inline void Reset::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Reset.msg)
}
inline void Reset::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Reset.msg)
}
inline ::std::string* Reset::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:Reset.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Reset::release_msg() {
  // @@protoc_insertion_point(field_release:Reset.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Reset::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:Reset.msg)
}

// -------------------------------------------------------------------

// UserDatabase_User

// uint32 uid = 1;
inline void UserDatabase_User::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 UserDatabase_User::uid() const {
  // @@protoc_insertion_point(field_get:UserDatabase.User.uid)
  return uid_;
}
inline void UserDatabase_User::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:UserDatabase.User.uid)
}

// string username = 2;
inline void UserDatabase_User::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserDatabase_User::username() const {
  // @@protoc_insertion_point(field_get:UserDatabase.User.username)
  return username_.GetNoArena();
}
inline void UserDatabase_User::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserDatabase.User.username)
}
#if LANG_CXX11
inline void UserDatabase_User::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserDatabase.User.username)
}
#endif
inline void UserDatabase_User::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserDatabase.User.username)
}
inline void UserDatabase_User::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserDatabase.User.username)
}
inline ::std::string* UserDatabase_User::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:UserDatabase.User.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserDatabase_User::release_username() {
  // @@protoc_insertion_point(field_release:UserDatabase.User.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserDatabase_User::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:UserDatabase.User.username)
}

// string password = 3;
inline void UserDatabase_User::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserDatabase_User::password() const {
  // @@protoc_insertion_point(field_get:UserDatabase.User.password)
  return password_.GetNoArena();
}
inline void UserDatabase_User::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserDatabase.User.password)
}
#if LANG_CXX11
inline void UserDatabase_User::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserDatabase.User.password)
}
#endif
inline void UserDatabase_User::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserDatabase.User.password)
}
inline void UserDatabase_User::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserDatabase.User.password)
}
inline ::std::string* UserDatabase_User::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:UserDatabase.User.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserDatabase_User::release_password() {
  // @@protoc_insertion_point(field_release:UserDatabase.User.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserDatabase_User::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:UserDatabase.User.password)
}

// repeated uint32 buddies = 4;
inline int UserDatabase_User::buddies_size() const {
  return buddies_.size();
}
inline void UserDatabase_User::clear_buddies() {
  buddies_.Clear();
}
inline ::google::protobuf::uint32 UserDatabase_User::buddies(int index) const {
  // @@protoc_insertion_point(field_get:UserDatabase.User.buddies)
  return buddies_.Get(index);
}
inline void UserDatabase_User::set_buddies(int index, ::google::protobuf::uint32 value) {
  buddies_.Set(index, value);
  // @@protoc_insertion_point(field_set:UserDatabase.User.buddies)
}
inline void UserDatabase_User::add_buddies(::google::protobuf::uint32 value) {
  buddies_.Add(value);
  // @@protoc_insertion_point(field_add:UserDatabase.User.buddies)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UserDatabase_User::buddies() const {
  // @@protoc_insertion_point(field_list:UserDatabase.User.buddies)
  return buddies_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UserDatabase_User::mutable_buddies() {
  // @@protoc_insertion_point(field_mutable_list:UserDatabase.User.buddies)
  return &buddies_;
}

// -------------------------------------------------------------------

// UserDatabase

// uint32 maxUid = 1;
inline void UserDatabase::clear_maxuid() {
  maxuid_ = 0u;
}
inline ::google::protobuf::uint32 UserDatabase::maxuid() const {
  // @@protoc_insertion_point(field_get:UserDatabase.maxUid)
  return maxuid_;
}
inline void UserDatabase::set_maxuid(::google::protobuf::uint32 value) {
  
  maxuid_ = value;
  // @@protoc_insertion_point(field_set:UserDatabase.maxUid)
}

// repeated .UserDatabase.User users = 2;
inline int UserDatabase::users_size() const {
  return users_.size();
}
inline void UserDatabase::clear_users() {
  users_.Clear();
}
inline const ::UserDatabase_User& UserDatabase::users(int index) const {
  // @@protoc_insertion_point(field_get:UserDatabase.users)
  return users_.Get(index);
}
inline ::UserDatabase_User* UserDatabase::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:UserDatabase.users)
  return users_.Mutable(index);
}
inline ::UserDatabase_User* UserDatabase::add_users() {
  // @@protoc_insertion_point(field_add:UserDatabase.users)
  return users_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::UserDatabase_User >*
UserDatabase::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:UserDatabase.users)
  return &users_;
}
inline const ::google::protobuf::RepeatedPtrField< ::UserDatabase_User >&
UserDatabase::users() const {
  // @@protoc_insertion_point(field_list:UserDatabase.users)
  return users_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::LoginResponse_Code> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LoginResponse_Code>() {
  return ::LoginResponse_Code_descriptor();
}
template <> struct is_proto_enum< ::RegisterResponse_Code> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RegisterResponse_Code>() {
  return ::RegisterResponse_Code_descriptor();
}
template <> struct is_proto_enum< ::AddBuddyResponse_Code> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AddBuddyResponse_Code>() {
  return ::AddBuddyResponse_Code_descriptor();
}
template <> struct is_proto_enum< ::RemoveBuddyResponse_Code> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RemoveBuddyResponse_Code>() {
  return ::RemoveBuddyResponse_Code_descriptor();
}
template <> struct is_proto_enum< ::Reset_Code> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Reset_Code>() {
  return ::Reset_Code_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_chat_2eproto__INCLUDED
